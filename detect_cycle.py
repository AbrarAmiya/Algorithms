# -*- coding: utf-8 -*-
"""task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lsYF_ijZP_xno4hWhxUUeQd3lSuDxH14
"""

#Task 4
def detect_cycle(k, color, parent):
    color[k] = "Gray"
    for i in adj_list[k]:
        if color[i] == "White":
            cycle = detect_cycle(i, color, parent)
            if cycle == "YES":
                return "YES"
        elif color[i] == "Gray":
            return "YES"
    color[k] = "Black"
    return "NO"

with open('/content/input4.txt', 'r') as input_file:
    n, m = input_file.readline().split()
    n, m = int(n), int(m)
    adj_list = {i: [] for i in range(1, n+1)}
    color, parent_vertece = {}, {}
    for i in range(m):
        n1, n2 = input_file.readline().split()
        n1, n2 = int(n1), int(n2)
        adj_list[n1].append(n2)

    for j in adj_list.keys():
        color[j] = "White"
        parent_vertece[j] = None

    is_cyclic = "NO"
    for k in adj_list.keys():
        if color[k] == "White":
            is_cyclic = detect_cycle(k, color, parent_vertece)
            if is_cyclic == "YES":
                break
print(is_cyclic)
with open('/content/output4.txt', 'w') as output_file:
    output_file.write(is_cyclic + '\n')